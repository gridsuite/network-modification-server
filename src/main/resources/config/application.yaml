spring:
  application:
    name: network-modification-server

  jpa:
    properties:
      hibernate:
        order_inserts: true
        order_updates: true
        jdbc:
          batch_size: 128

  cloud:
    function:
      definition: consumeBuild;consumeCancelBuild
    stream:
      bindings:
        consumeBuild-in-0:
          destination: ${powsybl-ws.rabbitmq.destination.prefix:}build.run
          group: buildGroup
          consumer:
            concurrency: 2
            max-attempts: 1
        publishBuild-out-0:
          destination: ${powsybl-ws.rabbitmq.destination.prefix:}build.run
        publishResultBuild-out-0:
          destination: ${powsybl-ws.rabbitmq.destination.prefix:}build.result
        consumeCancelBuild-in-0:
          destination: ${powsybl-ws.rabbitmq.destination.prefix:}build.cancel
        publishCancelBuild-out-0:
          destination: ${powsybl-ws.rabbitmq.destination.prefix:}build.cancel
        publishStoppedBuild-out-0:
          destination: ${powsybl-ws.rabbitmq.destination.prefix:}build.stopped
      output-bindings: publishBuild-out-0;publishResultBuild-out-0;publishCancelBuild-out-0;publishStoppedBuild-out-0
      rabbit:
        bindings:
          consumeBuild-in-0:
            consumer:
              auto-bind-dlq: true
              dead-letter-exchange: ${powsybl-ws.rabbitmq.destination.prefix:}build.run.dlx
              dead-letter-queue-name: ${powsybl-ws.rabbitmq.destination.prefix:}build.run.dlx.dlq
              dead-letter-exchange-type: topic
              quorum:
                enabled: true
                delivery-limit: 2

powsybl-ws:
  database:
    name: networkmodifications
    queryBegin: '&'
    customQuery: ${powsybl-ws.database.customQueryBegin}reWriteBatchedInserts=true

# maximum concurrent applications of modifications with preloadingStrategy=ALL_COLLECTIONS_NEEDED_FOR_BUS_VIEW
# to avoid out of memory issues
max-large-concurrent-applications: 2
